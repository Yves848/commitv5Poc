set sql dialect 3;

/********************************************************************/
/* table CLIENT                                                     */
/********************************************************************/

create table t_client(
    t_client_id d_id_char not null,
    matricule varchar(50),
    nom varchar(50) not null
        constraint chk_cli_nom check (char_length(nom) > 0),
    prenom varchar(50) not null,
    nom_jeune_fille varchar(50),
    date_naissance varchar(8),
    rang_gemellaire numeric(1) default 1 not null,
    langue varchar(3),
    sexe d_type_sexe,
    maison varchar(50),
    etage varchar(20),
    chambre varchar(20),
    lit varchar(10),
    commentaire_individuel blob sub_type 1,
    commentaire_global blob sub_type 1,
    t_profil_remise_id d_id_int,
    t_personne_referente_id d_id_int,
    facturation char(1) default '1' not null,
    date_derniere_visite date,
    constraint pk_client primary key (t_client_id)
);

/********************************************************************/
/* table CLIENT_ADRESSE                                             */
/*    Contient toutes les adresses pour un client                   */
/********************************************************************/

create table t_client_adresse(
    t_client_adresse_id d_id_int generated by default as identity not null,
    t_client_id d_id_char not null,
    type_adresse d_type_adresse not null,
    t_adresse_id d_id_int not null,
    constraint pk_client_adresse primary key(t_client_adresse_id),
    constraint fk_ca_client foreign key(t_client_id) references t_client(t_client_id) on delete cascade,
    constraint fk_ca_adresse foreign key(t_adresse_id) references t_adresse(t_adresse_id) on delete cascade);

comment on column t_client_adresse.type_adresse is
'0 : adresse personnelle
 1 : adresse facturation
 2 : adresse professionelle';

/********************************************************************/
/* table CLIENT_PRATICIEN                                           */
/*    Contient les médecins d'un client                             */
/*    Attention, ce n'est pas un historique des derniers médecin    */
/*    ont prescrit au client                                        */
/********************************************************************/

create table t_client_praticien(
    t_client_praticien_id d_id_int generated by default as identity not null,
    t_client_id d_id_char not null,
    t_praticien_id d_id_char not null,
    constraint pk_client_praticien primary key(t_client_praticien_id),
    constraint fk_cp_client foreign key(t_client_id) references t_client(t_client_id) on delete cascade,
    constraint fk_cp_praticien foreign key(t_praticien_id) references t_praticien(t_praticien_id) on delete cascade);

create unique index unq_client_praticien on t_client_praticien(t_client_id, t_praticien_id);