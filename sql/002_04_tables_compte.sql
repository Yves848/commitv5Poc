set sql dialect 3;

/********************************************************************/
/* table COMPTE                                                     */
/********************************************************************/

create table t_compte(
    t_compte_id d_id_char not null,
    nom varchar(100) not null
        constraint chk_cpt_nom check (char_length(nom) > 0),
    intitule varchar(100),
    t_contact_id d_id_int,
    constraint pk_compte primary key(t_compte_id),
    constraint fk_cpt_contact foreign key(t_contact_id) references t_contact(t_contact_id));

/********************************************************************/
/* table COMPTE_ADRESSE                                             */
/*    Contient toutes les adresses pour un compte                   */
/********************************************************************/

create table t_compte_adresse(
    t_compte_adresse_id d_id_int generated by default as identity not null,
    t_compte_id d_id_char not null,
    type_adresse d_type_adresse not null,
    t_adresse_id d_id_int not null,
    constraint pk_compte_adresse primary key(t_compte_adresse_id),
    constraint fk_cpa_compe foreign key(t_compte_id) references t_compte(t_compte_id) on delete cascade,
    constraint fk_cpa_adresse foreign key(t_adresse_id) references t_adresse(t_adresse_id) on delete cascade);

create table t_compte_client(
    t_compte_client_id d_id_int generated by default as identity not null,
    t_compte_id d_id_char not null,
    t_client_id d_id_char not null,
    constraint pk_compte_client primary key(t_compte_client_id),
    constraint fk_cptcli_compte foreign key(t_compte_id) references t_compte(t_compte_id) on delete cascade,
    constraint fk_cptcli_client foreign key(t_client_id) references t_client(t_client_id) on delete cascade);