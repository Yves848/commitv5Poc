set sql dialect 3;

/********************************************************************/
/* table FOURNISSEUR                                                */
/********************************************************************/

create table t_fournisseur(
    t_fournisseur_id d_id_char not null,
    type_fournisseur d_type_fournisseur not null,
    raison_sociale varchar(100) not null,
    t_adresse_id d_id_int,
    t_contact_id d_id_int,
    commentaire blob sub_type 1,
    constraint pk_fournisseur primary key (t_fournisseur_id),
    constraint fk_four_adresse foreign key (t_adresse_id) references t_adresse(t_adresse_id) on delete set null,
    constraint fk_four_contact foreign key (t_contact_id) references t_contact(t_contact_id) on delete set null);

create unique index unq_fournisseur on t_fournisseur(type_fournisseur, raison_sociale);

comment on column t_fournisseur.type_fournisseur is
'1 : fournisseur direct/laboratoire
 2 : grossiste';

/********************************************************************/
/* table PRODUIT                                                    */
/********************************************************************/

create table t_produit(
    t_produit_id d_id_char not null,
    code_reference varchar(20),
    etat d_etat_produit,
    liste d_liste_produit,
    base_remboursement numeric(10,3),
    prix_vente numeric(10,3),
    prix_achat_catalogue numeric(10,3),
    pamp numeric(10,3),
    taux_tva numeric(5,2),
    commentaire_vente blob sub_type 1,
    commentaire_gestion blob sub_type 1,
    t_repartiteur_id d_id_char,
    derniere_vente date,
    classification varchar(60),
    borne_mini integer default 0 not null,
    borne_maxi integer,
    supprime boolean default false not null,
    constraint pk_produit primary key (t_produit_id));

comment on column t_produit.etat is
'0 : En vigueur
 1 : En vigueur
 2 : Ne se fait plus
 3 : Fabrication suspendue
 4 : Produit en vente interdite
 5 : Produit remplacé
 8 : Statut inconnu';

comment on column t_produit.liste is
'0 : produit non-listé
 1 : Liste I
 2 : Liste II
 3 : Produit stupéfiant';

/********************************************************************/
/* table PRODUIT_DESIGNATION                                        */
/*    Liste les différentes designation d'un produit en fonction    */
/*    de la langue                                                  */
/********************************************************************/

create table t_produit_designation(
    t_produit_designation_id d_id_int generated by default as identity not null,
    t_produit_id d_id_char not null,
    langue varchar(3) not null
        constraint chk_pd_langue check (char_length(langue) > 0),
    designation varchar(100) not null
        constraint chk_pd_designation check (char_length(designation) > 0),
    constraint pk_produit_designation primary key(t_produit_designation_id),
    constraint fk_pd_produit foreign key(t_produit_id) references t_produit(t_produit_id) on delete cascade);

create index idx_pd_designation_langue on t_produit_designation(t_produit_id, langue);

/********************************************************************/
/* table PRODUIT_CODE                                               */
/*    Codes utilisés pour un produit (CIP, EAN, CNK, etc ...)       */
/********************************************************************/

create table t_produit_code(
    t_produit_code_id d_id_int generated by default as identity not null,
    t_produit_id d_id_char not null,
    type_code d_type_code_produit,
    code varchar(20) not null
        constraint chk_pc_code check (char_length(code) > 0),
    constraint pk_produit_code primary key(t_produit_code_id),
    constraint fk_pc_produit foreign key(t_produit_id) references t_produit(t_produit_id) on delete cascade);

create unique index unq_produit_code on t_produit_code(t_produit_id, type_code, code);

create index idx_pc_type_code on t_produit_code(t_produit_id, type_code);

comment on column t_produit_code.type_code is
'0 : Code CIP7/CNK
 1 : Code CIP/ACL 13
 2 : Code EAN13
 3 : Autre code';

/********************************************************************/
/* table PRODUIT_PEREMPTION                                         */
/********************************************************************/

create table t_produit_peremption(
    t_produit_peremption_id d_id_int generated by default as identity not null,
    t_produit_id d_id_char not null,
    peremption date not null,
    quantite integer not null,
    constraint pk_produit_peremption primary key(t_produit_peremption_id),
    constraint fk_pp_produit foreign key(t_produit_id) references t_produit(t_produit_id) on delete cascade);

/********************************************************************/
/* table DEPOT                                                      */
/********************************************************************/

create table t_depot(
    t_depot_id d_id_char not null,
    libelle varchar(50) not null,
    constraint pk_depot primary key (t_depot_id));

create unique index unq_depot on t_depot(libelle);

/********************************************************************/
/* table ZONE GEOGRAPHIQUE                                          */
/********************************************************************/

create table t_zone_geographique(
    t_zone_geographique_id d_id_char not null,
    libelle varchar(50) not null,
    constraint pk_zone_geographique primary key(t_zone_geographique_id));

create unique index unq_zone_geographique on t_zone_geographique(libelle);

/********************************************************************/
/* table STOCK                                                      */
/********************************************************************/

create table t_stock(
    t_stock_id d_id_int generated by default as identity not null,
    t_produit_id d_id_char not null,
    stock integer not null,
    stock_mini integer default 0 not null,
    stock_maxi integer,
    t_depot_id d_id_char,
    t_zone_geographique_id d_id_char,
    constraint pk_stock primary key(t_produit_id, t_depot_id),
    constraint fk_stk_depot foreign key (t_depot_id) references t_depot(t_depot_id) on delete cascade,
    constraint fk_stk_zone_geographique foreign key (t_zone_geographique_id) references t_zone_geographique(t_zone_geographique_id) on delete cascade);

create unique index unq_stock on t_stock(t_produit_id, t_depot_id);